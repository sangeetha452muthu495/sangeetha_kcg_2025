Animesh has n empty candy jars, numbered from 1 to n, with infinite capacity. He performs m 
operations. Each operation is described by 3 integers,a ,b , k . Here, a and b are indices of the jars, and k
is the number of candies to be added inside each jar whose index lies between a and b (both inclusive). Can you tell 
the average number of candies after m operations?

#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'solve' function below.
#
# The function is expected to return an INTEGER.
# The function accepts following parameters:
#  1. INTEGER n
#  2. 2D_INTEGER_ARRAY operations
#

def solve(n, operations):
    output = 0
    for o in operations:
        output += o[2] * (o[1]-o[0]+1)
    return output//n
    
        
    # Write your code here

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    first_multiple_input = input().rstrip().split()

    n = int(first_multiple_input[0])

    m = int(first_multiple_input[1])

    operations = []

    for _ in range(m):
        operations.append(list(map(int, input().rstrip().split())))

    result = solve(n, operations)

    fptr.write(str(result) + '\n')

    fptr.close()
